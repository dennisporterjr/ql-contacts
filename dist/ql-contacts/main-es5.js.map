{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pipes/phone.pipe.ts","webpack:///src/app/pipes/truncate.pipe.ts","webpack:///src/app/services/contacts/contacts.service.ts","webpack:///src/app/services/environment/environment.service.ts","webpack:///src/app/services/fun-title/fun-title.service.ts","webpack:///src/app/services/viewport/viewport.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/form/input-email/input-email.component.ts","webpack:///src/app/shared/form/input-email/input-email.component.html","webpack:///src/app/shared/form/input-phone/input-phone.component.ts","webpack:///src/app/shared/form/input-phone/input-phone.component.html","webpack:///src/app/shared/form/input-text/input-text.component.ts","webpack:///src/app/shared/form/input-text/input-text.component.html","webpack:///src/app/shared/form/input/emittable-input/emittable-input.component.ts","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/view/contacts/contact-add/contact-add.component.ts","webpack:///src/app/view/contacts/contact-add/contact-add.component.html","webpack:///src/app/view/contacts/contact-details/contact-details.component.ts","webpack:///src/app/view/contacts/contact-details/contact-details.component.html","webpack:///src/app/view/contacts/contact-details/detail-item/detail-item.component.ts","webpack:///src/app/view/contacts/contact-details/detail-item/detail-item.component.html","webpack:///src/app/view/contacts/contact-form/contact-form.component.ts","webpack:///src/app/view/contacts/contact-form/contact-form.component.html","webpack:///src/app/view/contacts/contact-form/contact-form.config.ts","webpack:///src/app/view/contacts/contact-header/contact-header.component.ts","webpack:///src/app/view/contacts/contact-header/contact-header.component.html","webpack:///src/app/view/contacts/contacts.component.ts","webpack:///src/app/view/contacts/contacts.component.html","webpack:///src/app/view/view.component.ts","webpack:///src/app/view/view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","component","path","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","entryComponents","providers","bootstrap","PhonePipe","sanitizer","value","format","nums","replace","len","length","digits","slice","dash","href","n","bypassSecurityTrustUrl","name","TruncatePipe","ContactsService","http","env","subject","contacts","asObservable","get","subscribe","data","next","API2URL","providedIn","EnvironmentService","APIURL","FunTitleService","$ucce$$","BreakpointService","ViewportService","observer","STATES","MOBILE","stateObserver","breaks","Medium","Large","XLarge","observe","breakpointUpdateHandler","bind","breakpoint","state","matches","FULLSCREEN","FooterComponent","InputEmailComponent","validators","push","email","placeholder","InputPhoneComponent","concat","maxLength","minLength","pattern","InputTextComponent","EmittableInputComponent","valueChange","stateChange","validation","passedValidation","extendedValidation","con","statusChanges","updateState","valueChanges","updateValue","required","undefined","numbersOnly","emit","template","HeaderComponent","ContactAddComponent","viewport","dialog","snack","dialogRef","open","width","mobile","height","afterClosed","showSuccessSnackBar","result","duration","provide","useClass","openContactForm","ContactDetailsComponent","details","displayedItems","fullscreenItems","filter","el","includes","label","icon","contact","address","phone","company","subscription","breakpointHandler","unsubscribe","DetailItemComponent","ContactFormComponent","fun","formData","isLoading","every","input","key","entries","Map","map","payload","prepare","Object","fromEntries","JSON","stringify","obj","addressArray","city","zipCode","address2","splice","join","console","log","serialize","formValid","announce","setTimeout","close","detest","CONTACT_FORM_CONFIG","type","ContactHeaderComponent","ContactsComponent","changeDetector","fullList","displayedColumns","detailColumns","pageSize","pageIndex","fullColumns","mobileColumns","subscriptions","list","pipe","c","Array","isArray","contactsHandler","dataSource","paginator","setMobileLayout","setFullLayout","forEach","s","minHeight","animations","ViewComponent","contactList","load","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ViewComponent } from './view/view.component';\n\nconst routes: Routes = [\n  {\n    component: ViewComponent,\n    path: '',\n  },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ],\n})\nexport class AppComponent {\n  title = 'ql-contacts';\n}\n","<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { PhonePipe } from './pipes/phone.pipe';\nimport { TruncatePipe } from './pipes/truncate.pipe';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { InputEmailComponent } from './shared/form/input-email/input-email.component';\nimport { InputPhoneComponent } from './shared/form/input-phone/input-phone.component';\nimport { InputTextComponent } from './shared/form/input-text/input-text.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { ContactAddComponent } from './view/contacts/contact-add/contact-add.component';\nimport { ContactDetailsComponent } from './view/contacts/contact-details/contact-details.component';\nimport { DetailItemComponent } from './view/contacts/contact-details/detail-item/detail-item.component';\nimport { ContactFormComponent } from './view/contacts/contact-form/contact-form.component';\nimport { ContactHeaderComponent } from './view/contacts/contact-header/contact-header.component';\nimport { ContactsComponent } from './view/contacts/contacts.component';\nimport { ViewComponent } from './view/view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewComponent,\n    HeaderComponent,\n    FooterComponent,\n    ContactsComponent,\n    PhonePipe,\n    ContactDetailsComponent,\n    ContactAddComponent,\n    ContactHeaderComponent,\n    ContactFormComponent,\n    InputTextComponent,\n    InputEmailComponent,\n    InputPhoneComponent,\n    DetailItemComponent,\n    TruncatePipe,\n  ],\n  entryComponents: [\n    ContactFormComponent,\n    InputPhoneComponent,\n    InputTextComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ],\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n/*\n * Format the phone number\n * Takes a phone number and formats it.\n * Usage:\n *   value | phone:format?\n * Example:\n *   {{ \"+1 (313) 555-1212\" | phone:dash }}\n *   formats to: 313-555-1212\n*/\n@Pipe({\n  name: 'phone',\n})\nexport class PhonePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  transform(value: string, format?: string): SafeUrl | string  {\n    const nums = value.replace(/[^\\d]/g, '');\n    const len = nums.length;\n    const digits = nums.slice(-10);\n\n    // for now... we're only filtering american numbers\n    if (len === 10 || len === 11) {\n      if (!format || format === 'dash') {\n        return this.dash(digits);\n      }\n\n      if (format === 'link') {\n        return this.href(nums);\n      }\n    }\n\n    return value; // fail silently\n  }\n\n  dash(n: string): string {\n      return n.slice(0, 3) + '-' + n.slice(3, 6) + '-' + n.slice(6, 10);\n  }\n\n  href(n: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl('tel:' + n);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, len: number): string {\n    if (value.length > len) {\n      return value.slice(0, len) + '...';\n    }\n\n    return value;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { IContact } from '../../interfaces/shared.interfaces';\nimport { EnvironmentService } from '../environment/environment.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactsService {\n  private subject: BehaviorSubject<IContact[] | []> = new BehaviorSubject([]);\n\n  public readonly contacts: Observable<IContact[] | []> = this.subject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private env: EnvironmentService,\n  ) { }\n\n  load(): Observable<IContact[] | []> {\n    this.get()\n      .subscribe((data: IContact[]) => {\n        this.subject.next(data);\n      });\n\n    return this.contacts;\n  }\n\n  get(): Observable<IContact[]> {\n    return this.http.get<IContact[]>(`${this.env.API2URL}/contact`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnvironmentService {\n  public readonly APIURL: string = 'http://demo5838836.mockable.io/';\n  public readonly API2URL: string = 'http://demo4924906.mockable.io/';\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FunTitleService {\n\n  public readonly $ucce$$ = `\n  /$$$$$$\n /$$__  $$\n| $$  \\\\__/ /$$   /$$  /$$$$$$$  /$$$$$$$  /$$$$$$   /$$$$$$$ /$$$$$$$\n|  $$$$$$ | $$  | $$ /$$_____/ /$$_____/ /$$__  $$ /$$_____//$$_____/\n \\\\____  $$| $$  | $$| $$      | $$      | $$$$$$$$|  $$$$$$|  $$$$$$\n /$$  \\\\ $$| $$  | $$| $$      | $$      | $$_____/ \\\\____  $$\\\\____  $$\n|  $$$$$$/|  $$$$$$/|  $$$$$$$|  $$$$$$$|  $$$$$$$ /$$$$$$$//$$$$$$$/\n \\\\______/  \\\\______/  \\\\_______/ \\\\_______/ \\\\_______/|_______/|_______/\n`;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport abstract class BreakpointService {\n  public readonly stateObserver: Observable<string>;\n  public readonly breaks: string[];\n  readonly STATES: any;\n\n  public abstract getState(): string;\n  public abstract fullscreen(): boolean;\n  public abstract mobile(): boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ViewportService extends BreakpointService {\n  static readonly STATES = {\n    MOBILE: 'mobile',\n    FULLSCREEN: 'fullScreen',\n  };\n\n  private subject: BehaviorSubject<string> = new BehaviorSubject(ViewportService.STATES.MOBILE);\n  private state: string;\n\n  public readonly stateObserver: Observable<string> = this.subject.asObservable();\n  public readonly breaks: string[] = [\n    Breakpoints.Medium,\n    Breakpoints.Large,\n    Breakpoints.XLarge,\n  ];\n\n  constructor(private observer: BreakpointObserver) {\n    super();\n\n    observer\n      .observe(this.breaks)\n      .subscribe(this.breakpointUpdateHandler.bind(this));\n  }\n\n  breakpointUpdateHandler(breakpoint): void {\n    this.state = breakpoint.matches ?\n      ViewportService.STATES.FULLSCREEN :\n      ViewportService.STATES.MOBILE;\n\n    this.subject.next(this.state);\n  }\n\n  getState(): string {\n    return this.state;\n  }\n\n  fullscreen(): boolean {\n    return this.state === ViewportService.STATES.FULLSCREEN;\n  }\n\n  mobile(): boolean {\n    return this.state === ViewportService.STATES.MOBILE;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: [ './footer.component.scss' ],\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  Written by Dennis Porter Jr. ©2020.\n</footer>","import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EmittableInputComponent } from 'src/app/shared/form/input/emittable-input/emittable-input.component';\n\n@Component({\n  selector: 'app-input-email',\n  templateUrl: './input-email.component.html',\n  styleUrls: [ './input-email.component.scss' ],\n})\nexport class InputEmailComponent extends EmittableInputComponent {\n\n  constructor() {\n    super();\n  }\n\n  extendedValidation() {\n    this.validators.push(Validators.email);\n  }\n}\n","<mat-form-field class=\"full-width\">\n\n  <mat-label>{{name}}</mat-label>\n\n  <input\n    [formControl]=\"con\"\n    matInput\n    placeholder=\"{{placeholder}}\" />\n\n  <mat-icon matSuffix>alternate_email</mat-icon>\n\n  <mat-error *ngIf=\"con.hasError('required')\">\n    {{name}} is <strong>required</strong>\n  </mat-error>\n\n  <mat-error\n    *ngIf=\"con.hasError('email') && !con.hasError('required')\">\n    please enter a valid email address\n  </mat-error>\n\n</mat-form-field>\n\n","import { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { EmittableInputComponent } from 'src/app/shared/form/input/emittable-input/emittable-input.component';\n\n@Component({\n  selector: 'app-input-phone',\n  templateUrl: './input-phone.component.html',\n  styleUrls: [ './input-phone.component.scss' ],\n})\nexport class InputPhoneComponent extends EmittableInputComponent {\n\n  constructor() {\n    super();\n  }\n\n  extendedValidation() {\n    this.validators = this.validators.concat([\n      Validators.maxLength(10),\n      Validators.minLength(10),\n      Validators.pattern(/^[0-9]\\d*$/),\n    ]);\n  }\n}\n","<mat-form-field class=\"full-width\">\n\n  <mat-label>{{name}}</mat-label>\n\n  <span matPrefix>+1 &nbsp;</span>\n\n  <input\n    maxlength=\"10\"\n    [formControl]=\"con\"\n    matInput\n    placeholder=\"{{placeholder}}\" />\n\n  <mat-icon matSuffix>perm_phone_msg</mat-icon>\n\n  <mat-hint align=\"end\">{{value.length}} / 10</mat-hint>\n\n  <mat-error *ngIf=\"con.hasError('required')\">\n    {{name.toLowerCase()}} is <strong>required</strong>\n  </mat-error>\n\n  <mat-error *ngIf=\"con.hasError('pattern')\">\n    Only numerical values are allowed.\n  </mat-error>\n\n  <mat-error\n    *ngIf=\"con.hasError('maxLength') || !con.hasError('minLength') && !con.hasError('required') && !con.hasError('pattern')\">\n    {{name.toLowerCase()}} must be <strong>10 digits,</strong> only american phone numbers.\n  </mat-error>\n\n</mat-form-field>\n","import { Component } from '@angular/core';\nimport { EmittableInputComponent } from 'src/app/shared/form/input/emittable-input/emittable-input.component';\n\n@Component({\n  selector: 'app-input-text',\n  templateUrl: './input-text.component.html',\n  styleUrls: [ './input-text.component.scss' ],\n})\nexport class InputTextComponent extends EmittableInputComponent {\n\n  constructor() {\n    super();\n  }\n\n  extendedValidation() { }\n}\n","<mat-form-field class=\"full-width\">\n\n  <mat-label>{{name}}</mat-label>\n\n  <input\n    [formControl]=\"con\"\n    matInput\n    minlength=\"{{validation.minLength}}\"\n    maxlength=\"{{validation.maxLength}}\"\n    placeholder=\"{{placeholder}}\" />\n\n  <mat-hint *ngIf=\"validation.minLength || validation.maxLength\" align=\"end\">{{value.length}} / {{validation.minLength}}</mat-hint>\n\n  <mat-error *ngIf=\"con.hasError('required')\">\n    {{name.toLowerCase()}} is <strong>required</strong>\n  </mat-error>\n\n  <mat-error *ngIf=\"con.hasError('pattern') && validation.numbersOnly && !con.hasError('required')\">\n    only numerical values allowed\n  </mat-error>\n\n  <mat-error *ngIf=\"con.hasError('minlength') && !con.hasError('pattern') && !con.hasError('required')\">\n    the {{name.toLowerCase()}} is too short\n  </mat-error>\n\n  <mat-error *ngIf=\"con.hasError('maxlength') && !con.hasError('pattern') && !con.hasError('required')\">\n    the {{name.toLowerCase()}} is too long\n  </mat-error>\n\n</mat-form-field>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\nimport { IQLFormInputValidation } from 'src/app/interfaces/shared.interfaces';\n\n/*\n * Sample Template:\n * <input\n *   [formControl]=\"con\"\n *   [(ngModel)]=\"model\"\n *   (ngModelChange)=\"modelChange.emit(model)\" />\n */\n\n@Component({\n  selector: 'app-emittable-input',\n  template: ``,\n})\nexport abstract class EmittableInputComponent implements OnInit {\n\n  // Two-way bound value of the input.\n  @Input() value: string;\n  @Output() valueChange = new EventEmitter<string>();\n\n  // Two-way bound value of the input's status/state.\n  @Input() state: string;\n  @Output() stateChange = new EventEmitter<string>();\n\n  @Input() name: string;\n  @Input() placeholder: string;\n  @Input() validation: IQLFormInputValidation = { };\n\n  public con: FormControl;\n  protected validators: ValidatorFn[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.passedValidation();\n    this.extendedValidation();\n\n    this.con = new FormControl(this.value, this.validators);\n    this.con.statusChanges\n      .subscribe(this.updateState.bind(this));\n\n    this.con.valueChanges\n      .subscribe(this.updateValue.bind(this));\n  }\n\n  private passedValidation() {\n    if (this.validation.required) {\n      this.validators.push(Validators.required);\n    }\n\n    if (this.validation.maxLength !== undefined) {\n      this.validators.push(Validators.maxLength(this.validation.maxLength));\n    }\n\n    if (this.validation.minLength !== undefined) {\n      this.validators.push(Validators.minLength(this.validation.minLength));\n    }\n\n    if (this.validation.pattern !== undefined) {\n      this.validators.push(Validators.pattern(this.validation.pattern));\n    }\n\n    if (this.validation.numbersOnly !== undefined) {\n      this.validators.push(Validators.pattern(/^[0-9]\\d*$/));\n    }\n  }\n\n  abstract extendedValidation();\n\n  updateValue(value) {\n    this.valueChange.emit(this.con.value);\n  }\n\n  updateState(state) {\n    this.state = state;\n    this.stateChange.emit(this.state);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: [ './header.component.scss' ],\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  Quicken Loans\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BreakpointService, ViewportService } from 'src/app/services/viewport/viewport.service';\n\nimport { ContactFormComponent } from '../contact-form/contact-form.component';\n\n@Component({\n  selector: 'app-contact-add',\n  templateUrl: './contact-add.component.html',\n  styleUrls: [ './contact-add.component.scss' ],\n  providers: [\n    { provide: BreakpointService, useClass: ViewportService },\n  ],\n})\nexport class ContactAddComponent implements OnInit {\n\n  constructor(\n    private viewport: BreakpointService,\n    private dialog: MatDialog,\n    private snack: MatSnackBar,\n  ) { }\n\n  ngOnInit() { }\n\n  openContactForm() {\n    const dialogRef = this.dialog.open(\n      ContactFormComponent,\n      {\n        width: this.viewport.mobile() ? '80vw' : '50vw',\n        height: '80vh',\n      }\n    );\n\n    dialogRef.afterClosed()\n      .subscribe(this.showSuccessSnackBar.bind(this));\n  }\n\n  showSuccessSnackBar(result) {\n    if (result === 'success') {\n      this.snack.open(\n        'Contact created!',\n        'close',\n        { duration: 3000 },\n      );\n    }\n  }\n}\n","<button \n  class=\"contact-add\"\n  (click)=\"openContactForm()\"\n  mat-fab \n  color=\"accent\">\n  <i class=\"material-icons\">person_add_alt_1</i>\n</button>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IContact } from 'src/app/interfaces/shared.interfaces';\nimport { BreakpointService, ViewportService } from 'src/app/services/viewport/viewport.service';\n\n@Component({\n  selector: 'app-contact-details',\n  templateUrl: './contact-details.component.html',\n  providers: [\n    {\n      provide: BreakpointService,\n      useClass: ViewportService,\n    },\n  ],\n  styleUrls: [ './contact-details.component.scss' ],\n})\nexport class ContactDetailsComponent implements OnInit, OnDestroy {\n\n  @Input() contact: IContact;\n\n  public details = [];\n  public displayedItems = [];\n  private fullscreenItems: string[] = [ 'Email', 'Address' ];\n  private subscription: Subscription;\n\n  constructor(private viewport: BreakpointService) { }\n\n  breakpointHandler(breakpoint) {\n    if (breakpoint === ViewportService.STATES.MOBILE) {\n      this.displayedItems = this.details.slice();\n    } else {\n      this.displayedItems = this.details.filter(el => this.fullscreenItems.includes(el.label));\n    }\n  }\n\n  ngOnInit(): void {\n    this.details = [\n      {\n        label: 'Email',\n        icon: 'email',\n        value: this.contact.email,\n      },\n      {\n        label: 'Address',\n        icon: 'location_on',\n        value: this.contact.address,\n      },\n      {\n        label: 'Phone',\n        icon: 'perm_phone_msg',\n        value: this.contact.phone,\n      },\n      {\n        label: 'Company Name',\n        icon: 'business_center',\n        value: this.contact.company,\n      },\n    ];\n\n    this.subscription = this.viewport.stateObserver\n      .subscribe(this.breakpointHandler.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"contact-details\">\n\n  <app-detail-item\n    *ngFor=\"let item of displayedItems\"\n    [icon]=\"item.icon\"\n    [label]=\"item.label\"\n    [value]=\"item.value\"></app-detail-item>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-detail-item',\n  templateUrl: './detail-item.component.html',\n  styleUrls: [ './detail-item.component.scss' ]\n})\nexport class DetailItemComponent {\n\n  @Input() icon: string;\n  @Input() label: string;\n  @Input() value: string;\n\n  constructor() { }\n}\n","<div class=\"detail\">\n  <div class=\"icon\">\n    <i class=\"material-icons\">{{icon}}</i>\n  </div>\n  <div class=\"info\">\n    <div class=\"info-value\">\n      {{value}}\n    </div>\n    <div class=\"info-label\">\n      {{label}}\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { IBaseContact, IFormContact, IQLFormInput } from 'src/app/interfaces/shared.interfaces';\nimport { FunTitleService } from 'src/app/services/fun-title/fun-title.service';\nimport { CONTACT_FORM_CONFIG } from './contact-form.config';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: [ './contact-form.component.scss' ],\n})\nexport class ContactFormComponent {\n\n  public formData: IQLFormInput[] = CONTACT_FORM_CONFIG;\n  public isLoading = false;\n\n  constructor(\n    private fun: FunTitleService,\n    private dialogRef: MatDialogRef<ContactFormComponent>,\n  ) { }\n\n  formValid() {\n    return this.formData.every(input => input.state === 'VALID' || input.key === 'address2');\n  }\n\n  serialize() {\n    const entries = new Map(this.formData.map((el) => [ el.key, el.value ]));\n    // @ts-ignore\n    const payload = this.prepare(Object.fromEntries(entries));\n\n    return JSON.stringify(payload, null, '  ');\n  }\n\n  prepare(obj: IFormContact): IBaseContact {\n    const addressArray = [ obj.address, obj.city, obj.state, obj.zipCode ];\n\n    if (obj.address2) {\n      addressArray.splice(1, 0, obj.address2);\n    }\n\n    obj.address = addressArray.join(', ');\n\n    delete obj.address2;\n    delete obj.city;\n    delete obj.state;\n    delete obj.zipCode;\n\n    return obj;\n  }\n\n  announce() {\n    console.log('FORM VALID.');\n    console.log(this.fun.$ucce$$);\n    console.log('DATA:');\n    console.log(this.serialize());\n  }\n\n  detest() {\n    console.log('Not Valid', this.formData.map((el) => ({ key: el.key, state: el.state })));\n  }\n\n  createContact() {\n    this.isLoading = true;\n\n    if (this.formValid()) {\n      this.announce();\n      setTimeout(() => { this.dialogRef.close('success'); }, 3000);\n    } else {\n      this.detest();\n    }\n  }\n}\n","<h2 mat-dialog-title>\n  Create New Contact\n  <mat-hint>Scroll to complete.</mat-hint>\n</h2>\n\n<mat-dialog-content>\n\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n\n  <form class=\"contact-form\" *ngIf=\"!isLoading\">\n\n    <div *ngFor=\"let i of formData\">\n\n      <div [ngSwitch]=\"i.type\">\n\n        <app-input-text\n          *ngSwitchDefault\n          class=\"contact-input\"\n          [name]=\"i.name\"\n          [placeholder]=\"i.placeholder\"\n          [validation]=\"i.validation\"\n          [(state)]=\"i.state\"\n          [(value)]=\"i.value\"></app-input-text>\n\n        <app-input-phone\n          *ngSwitchCase=\"'phone'\"\n          class=\"contact-input\"\n          [name]=\"i.name\"\n          [placeholder]=\"i.placeholder\"\n          [validation]=\"i.validation\"\n          [(state)]=\"i.state\"\n          [(value)]=\"i.value\"></app-input-phone>\n\n        <app-input-email\n          *ngSwitchCase=\"'email'\"\n          class=\"contact-input\"\n          [name]=\"i.name\"\n          [placeholder]=\"i.placeholder\"\n          [validation]=\"i.validation\"\n          [(state)]=\"i.state\"\n          [(value)]=\"i.value\"></app-input-email>\n\n      </div>\n\n    </div>\n\n  </form>\n\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n\n  <button\n    *ngIf=\"!isLoading\"\n    mat-button mat-dialog-close>Cancel</button>\n\n  <button\n    mat-raised-button\n    *ngIf=\"!isLoading\"\n    [disabled]=\"!formValid()\"\n    (click)=\"createContact()\"\n    color=\"primary\">Create</button>\n\n</mat-dialog-actions>\n","import { IQLFormInput } from 'src/app/interfaces/shared.interfaces';\n\nexport const CONTACT_FORM_CONFIG: IQLFormInput[] = [\n  {\n    name: 'Company',\n    key: 'company',\n    placeholder: 'Ex. Google Inc.',\n    type: 'text',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'First Name',\n    key: 'firstName',\n    placeholder: 'Ex. John',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Last Name',\n    key: 'lastName',\n    placeholder: 'Ex. Doe',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Phone Number',\n    key: 'phone',\n    placeholder: 'Ex. 313-555-1212',\n    type: 'phone',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Email Address',\n    key: 'email',\n    placeholder: 'Ex. joe@ql.com',\n    type: 'email',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Address',\n    key: 'address',\n    placeholder: 'Ex. 1234 Easy Street',\n    type: 'text',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Address 2',\n    key: 'address2',\n    placeholder: 'Unit #67',\n    type: 'text',\n    value: '',\n    state: '',\n    validation: {\n      required: false,\n    },\n  },\n  {\n    name: 'City',\n    key: 'city',\n    placeholder: 'Ex. Detroit',\n    type: 'text',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'State',\n    key: 'state',\n    placeholder: 'Ex. Michigan',\n    type: 'text',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n    },\n  },\n  {\n    name: 'Postal Code',\n    key: 'zipCode',\n    placeholder: 'Ex. 54321',\n    type: 'number',\n    value: '',\n    state: '',\n    validation: {\n      required: true,\n      minLength: 5,\n      maxLength: 5,\n      numbersOnly: true,\n    },\n  },\n];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-header',\n  templateUrl: './contact-header.component.html',\n  styleUrls: [ './contact-header.component.scss' ],\n})\nexport class ContactHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"contact-header\">\n  <h1>Contact List</h1>\n  <app-contact-add></app-contact-add>\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nimport { Subscription, Observable } from 'rxjs';\nimport { IContact } from 'src/app/interfaces/shared.interfaces';\nimport { BreakpointService, ViewportService } from 'src/app/services/viewport/viewport.service';\nimport { skipWhile } from 'rxjs/operators';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: [ './contacts.component.scss' ],\n  providers: [\n    {\n      provide: BreakpointService,\n      useClass: ViewportService,\n    },\n  ],\n  animations: [\n    trigger('expand', [\n      state('expanded', style({ height: '0px', minHeight: '0'})),\n      state('collapsed', style({ height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ContactsComponent implements OnInit, OnDestroy {\n  @ViewChild(MatTable) table: MatTable<any>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  @Input() public list: Observable<IContact[]>;\n  public fullList: IContact[] = [];\n  public dataSource: MatTableDataSource<IContact>;\n\n  // for showing/hiding info (based on screen size and state)\n  public displayedColumns: string[] = [];\n  public detailColumns: string[] = [];\n  public expanded: IContact;\n\n  // for pagination\n  public pageSize = 10;\n  public pageIndex = 0;\n\n  private fullColumns: string[] = [ 'fullName', 'phone', 'company', 'more' ];\n  private mobileColumns: string[] = [ 'fullName' ];\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    public viewport: BreakpointService,\n    public changeDetector: ChangeDetectorRef,\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.viewport.stateObserver\n        .subscribe(this.breakpointHandler.bind(this))\n    );\n\n    this.subscriptions.push(\n      this.list\n        .pipe(skipWhile(c => !(Array.isArray(c) && c.length) ))\n        .subscribe(this.contactsHandler.bind(this))\n    );\n  }\n\n  contactsHandler(contacts) {\n    this.fullList = contacts;\n    this.dataSource = new MatTableDataSource(this.fullList);\n    this.dataSource.paginator = this.paginator;\n  }\n\n  breakpointHandler(breakpoint) {\n    if (breakpoint === ViewportService.STATES.MOBILE) {\n      this.setMobileLayout();\n    } else {\n      this.setFullLayout();\n    }\n  }\n\n  setMobileLayout() {\n    this.displayedColumns = this.mobileColumns;\n  }\n\n  setFullLayout() {\n    this.displayedColumns = this.fullColumns;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","<div class=\"contacts\">\n\n  <div class=\"contacts-loader\" *ngIf=\"!fullList.length\">\n    <mat-spinner\n      color=\"accent\"\n      diameter=\"50\"\n    ></mat-spinner>\n  </div>\n\n  <table #qlTable mat-table multiTemplateDataRows [dataSource]=\"dataSource\" *ngIf=\"fullList.length\">\n\n    <ng-container matColumnDef=\"fullName\">\n      <th mat-header-cell *matHeaderCellDef>\n        Contact\n        <mat-hint *ngIf=\"viewport.mobile()\">Company</mat-hint>\n      </th>\n      <td mat-cell *matCellDef=\"let contact\">\n        <strong>{{contact.lastName}}, {{contact.firstName}}</strong>\n        <mat-hint *ngIf=\"viewport.mobile()\">{{contact.company | truncate:20}}</mat-hint>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"company\">\n      <th mat-header-cell *matHeaderCellDef>Company</th>\n      <td mat-cell *matCellDef=\"let contact\">\n        {{contact.company}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let contact\">\n        {{contact.email}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"phone\">\n      <th mat-header-cell *matHeaderCellDef>Phone</th>\n      <td mat-cell *matCellDef=\"let contact\">\n        <i class=\"material-icons lighten\">perm_phone_msg</i>\n        <a [href]=\"contact.phone | phone:'link'\">{{contact.phone | phone}}</a>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"more\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let contact\">\n        <button mat-button>more</button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\n    <ng-container matColumnDef=\"expandable\">\n      <td mat-cell *matCellDef=\"let contact\" [attr.colspan]=\"displayedColumns.length\">\n        <div class=\"contact-expandable\" [@expand]=\"contact === expanded ? 'collapsed' : 'expanded'\">\n          <app-contact-details [contact]=\"contact\"></app-contact-details>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr\n      class=\"contact-primary\"\n      [class.contact-expanded]=\"expanded === row\"\n      (click)=\"expanded = expanded === row ? null : row\"\n      mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <tr mat-row *matRowDef=\"let row; columns: ['expandable'];\" class=\"expandable-row\"></tr>\n\n  </table>\n\n  <mat-paginator\n    [length]=\"fullList.length\"\n    [pageSize]=\"pageSize\"\n    [pageIndex]=\"pageIndex\"\n  ></mat-paginator>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { IContact } from '../interfaces/shared.interfaces';\nimport { ContactsService } from '../services/contacts/contacts.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './view.component.html',\n  styleUrls: [ './view.component.scss' ],\n})\nexport class ViewComponent implements OnInit {\n\n  public contactList: Observable<IContact[] | []>;\n\n  constructor( private contacts: ContactsService) { }\n\n  ngOnInit(): void {\n    this.contactList = this.contacts.load();\n  }\n}\n","<app-header></app-header>\n<div class=\"main\">\n  <app-contact-header></app-contact-header>\n  <app-contacts [list]=\"contactList\"></app-contacts>\n</div>\n<app-footer></app-footer>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}